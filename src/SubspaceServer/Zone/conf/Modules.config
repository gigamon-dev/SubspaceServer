<?xml version="1.0" encoding="utf-8" ?>
<!--
This file controls which modules to load on startup.

The order of modules in this config matters.
A module that depends on other modules, needs to come after its dependencies.
Also, certain modules are designed to be able to chain top of another (e.g. Authentication modules)
So to be safe, only change the order if you know what you're doing.

The modules that you may want to modify in this configuration are highlighted with comments.
The rest of the modules you probably do not want to touch.

For plug-in modules (e.g. custom modules that you build):
1. Copy the .dll, the corresponding .deps.json, and any other libraries it depends on into a folder,
   preferably into its own subfolder within "bin/modules". For example, the SS.Replay.ReplayModule is 
   a plug-in module and its files are located under "bin/modules/bin/modules/Replay".
2. Add a module entry in this file with "type" and "path" attributes. 
   In the "type" attribute, only specify the module name and leave out the assembly name.
   In the "path" attribute, provide the path to the assembly.
-->
<modules>
	<module type="SS.Core.Modules.PosixSignal, SS.Core" />
	<module type="SS.Core.Modules.Prng, SS.Core" />
	<module type="SS.Core.Modules.ObjectPoolManager, SS.Core" />
	<module type="SS.Core.Modules.LogManager, SS.Core" />
	<module type="SS.Core.Modules.LogConsole, SS.Core" />
	<module type="SS.Core.Modules.Mainloop, SS.Core" />
	<module type="SS.Core.Modules.ConfigManager, SS.Core" />
	<module type="SS.Core.Modules.LogFile, SS.Core" />
	<module type="SS.Core.Modules.PlayerData, SS.Core" />
	<module type="SS.Core.Modules.ArenaManager, SS.Core" />
	<module type="SS.Core.Modules.LagData, SS.Core" />

	<!--
	Bandwidth limiting
	==================
	At least one is required. Order matters, the last one becomes the default that is used for player connections.
	- BandwidthNoLimit: no limiting of outbound data
	- BandwidthDefault: dynamically limit outbound data
	-->
	<module type="SS.Core.Modules.BandwidthNoLimit, SS.Core" />
	<module type="SS.Core.Modules.BandwidthDefault, SS.Core" />
	
	<module type="SS.Core.Modules.Network, SS.Core" />
	<module type="SS.Core.Modules.ChatNetwork, SS.Core" />

	<module type="SS.Core.Modules.MapData, SS.Core" />
	<module type="SS.Core.Modules.CapabilityManager, SS.Core" />
	<module type="SS.Core.Modules.MapNewsDownload, SS.Core" />
	<module type="SS.Core.Modules.Core, SS.Core" />
	<module type="SS.Core.Modules.ClientSettings, SS.Core" />
	<module type="SS.Core.Modules.PersistSQLite, SS.Core" />
	<module type="SS.Core.Modules.Persist, SS.Core" />

	<module type="SS.Core.Modules.CommandManager, SS.Core" />
	<module type="SS.Core.Modules.Obscene, SS.Core" />
	<module type="SS.Core.Modules.Chat, SS.Core" />
	<module type="SS.Core.Modules.Idle, SS.Core" />
	
	<module type="SS.Core.Modules.Scoring.Stats, SS.Core" />
	<module type="SS.Core.Modules.Scoring.BasicStats, SS.Core" />
	
	<module type="SS.Core.Modules.LogSysop, SS.Core" />
	<module type="SS.Core.Modules.CommandWatch, SS.Core" />

	<!-- 
	AuthFile
	========
	For password security without a billing server, or as a fallback when the billing connection is down.
	Remember to configure passwd.conf.
	-->
	<module type="SS.Core.Modules.AuthFile, SS.Core" />

	<module type="SS.Core.Modules.Security, SS.Core" />

	<!-- 
	DirectoryPublisher
	==================
	To list the zone on directory servers.
	Remember to configure [Directory] settings in global.conf.
	-->
	<!--<module type="SS.Core.Modules.DirectoryPublisher, SS.Core" />-->

	<!--
	BillingUdp
	==========
	Connects the zone to a billing server.
	Remember to configure [Billing] settings in global.conf. 
	The SS.Core.Modules.EncryptionVIE module is required.
	The SS.Core.Modules.BandwidthNoLimit module is required when using the default, recommended settings.
	-->
	<!--<module type="SS.Core.Modules.BillingUdp, SS.Core"/>-->

	<module type="SS.Core.Modules.AuthBan, SS.Core"/>
	
	<!--
	AuthVIE
	=======
	To authenticate bots that connect as VIE clients.
	Remember to configure [VIEnames] settings in global.conf
	-->
	<!--<module type="SS.Core.Modules.AuthVIE"/>-->
	
	<module type="SS.Core.Modules.Banners, SS.Core" />
	<module type="SS.Core.Modules.GameTimer, SS.Core" />
	<module type="SS.Core.Modules.FlagGame.CarryFlags, SS.Core" />
	<module type="SS.Core.Modules.FlagGame.StaticFlags, SS.Core" />
	<module type="SS.Core.Modules.Balls, SS.Core" />
	<module type="SS.Core.Modules.Bricks, SS.Core" />
	<module type="SS.Core.Modules.Crowns, SS.Core" />
	<module type="SS.Core.Modules.Game, SS.Core" />
	<module type="SS.Core.Modules.FreqManager, SS.Core" />
	<module type="SS.Core.Modules.Redirect, SS.Core" />
	<module type="SS.Core.Modules.LagAction, SS.Core" />
	<module type="SS.Core.Modules.FileTransfer, SS.Core" />
	<module type="SS.Core.Modules.Help, SS.Core" />
	<module type="SS.Core.Modules.Notify, SS.Core" />
	<module type="SS.Core.Modules.Quickfix, SS.Core" />

	<module type="SS.Core.Modules.Enforcers.LegalShip, SS.Core" />
	<module type="SS.Core.Modules.Enforcers.LockSpec, SS.Core" />
	<module type="SS.Core.Modules.Enforcers.ShipChange, SS.Core" />

	<module type="SS.Core.Modules.Scoring.Jackpot, SS.Core" />
	<module type="SS.Core.Modules.Scoring.PeriodicReward, SS.Core" />
	<module type="SS.Core.Modules.Scoring.KillPoints, SS.Core" />
	<module type="SS.Core.Modules.Scoring.Koth, SS.Core" />
	<module type="SS.Core.Modules.Scoring.SpeedGame, SS.Core" />
	<module type="SS.Core.Modules.Scoring.BallGamePoints, SS.Core" />
	<module type="SS.Core.Modules.Scoring.FlagGamePoints, SS.Core" />
	
	<module type="SS.Core.Modules.PlayerCommand, SS.Core" />
	<module type="SS.Core.Modules.AdminCommand, SS.Core" />
	
	<module type="SS.Core.Modules.AutoWarp, SS.Core" />
	<module type="SS.Core.Modules.Buy, SS.Core" />
	
	<module type="SS.Core.Modules.Fake, SS.Core" />
	<module type="SS.Replay.ReplayModule" path="bin/modules/Replay/SS.Replay.dll" />
	<module type="SS.Core.Modules.SubgameCompatibility, SS.Core" />

	<!--
	Peer
	====
	To connect multiple zone servers together.
	Remember to configure [Peer#] settings in global.conf.
	-->
	<!--<module type="SS.Core.Modules.Peer, SS.Core" />-->
	
	<module type="SS.Core.Modules.ArenaPlaceMultiPub, SS.Core" />
	<module type="SS.Core.Modules.ArenaAuthorization, SS.Core" />

	<!--
	Encryption modules
	==================
	- Order matters. An encryption module loaded earlier will be given an earlier opportunity to handle requests than one loaded later.
	  When a module handles a request, the request will not be sent to later modules.
	- At least one encryption module is required.
	- EncryptionContNative should be used in Production.
	  The native binaries are available for various platforms and architectures in the official releases.
	  https://github.com/gigamon-dev/SubspaceServer/releases
	-->
	<!--<module type="SS.EncryptionCont.EncryptionContNative" path="bin/modules/EncryptionCont/SS.EncryptionCont.dll"/>-->
	<module type="SS.Core.Modules.EncryptionVIE, SS.Core"/>
	
	<!-- 
	EncryptionNull
	==============
	Only useful for development and testing.
	-->
	<!--<module type="SS.Core.Modules.EncryptionNull, SS.Core"/>-->

	<module type="SS.Core.Modules.WatchDamage, SS.Core"/>

	<module type="SS.Core.Modules.Messages, SS.Core"/>
	<module type="SS.Core.Modules.LvzObjects, SS.Core"/>
	<module type="SS.Core.Modules.SelectBox, SS.Core"/>

	<!--
	Matchmaking modules
	===================
	Provides functionality for players to line up to play in matches of various types.
	These modules serve as an example of custom plug-in functionality.
	
	- PlayerGroups: Ability to group up with other players. Useful in conjunction with the TeamVersusMatch module.
	- MatchmakingQueues: Ability for players/groups to line up to play against the next available match. Required when using any matchmaking module.
	- PostgreSqlGameStats: Ability to save stats to a database. Using this requires the database, available at: https://github.com/gigamon-dev/subspace-stats-db. Configure with: [SS.Matchmaking] in global.conf
	- OneVersusOneMatch: Functionality for 1v1 (dueling) matches. Configure with: OneVersusOneMatch.conf
	- OneVersusOneStats: Stats for 1v1 (dueling) matches. Use this with the OneVersusOneMatch module.
	- TeamVersusMatch: Functionality for team matches. Configure with: TeamVersusMatch.conf
	- TeamVersusStats: Stats for team matches. Use this with the TeamVersusMatch module.
	-->
	<module type="SS.Matchmaking.Modules.PlayerGroups" path="bin/modules/Matchmaking/SS.Matchmaking.dll"/>
	<module type="SS.Matchmaking.Modules.MatchmakingQueues" path="bin/modules/Matchmaking/SS.Matchmaking.dll"/>
	<module type="SS.Matchmaking.Modules.MatchFocus" path="bin/modules/Matchmaking/SS.Matchmaking.dll" />
	<!--<module type="SS.Matchmaking.Modules.PostgreSqlGameStats" path="bin/modules/Matchmaking/SS.Matchmaking.dll"/>-->
	<!--<module type="SS.Matchmaking.Modules.LeagueManager" path="bin/modules/Matchmaking/SS.Matchmaking.dll" />-->
	<module type="SS.Matchmaking.Modules.OneVersusOneMatch" path="bin/modules/Matchmaking/SS.Matchmaking.dll"/>
	<module type="SS.Matchmaking.Modules.OneVersusOneStats" path="bin/modules/Matchmaking/SS.Matchmaking.dll"/>
	<module type="SS.Matchmaking.Modules.TeamVersusStats" path="bin/modules/Matchmaking/SS.Matchmaking.dll" />
	<module type="SS.Matchmaking.Modules.TeamVersusMatch" path="bin/modules/Matchmaking/SS.Matchmaking.dll" />
	<module type="SS.Matchmaking.Modules.MatchLvz" path="bin/modules/Matchmaking/SS.Matchmaking.dll" />

	<!--
	Example modules (module life-cycle)
	===================================
	The following modules are examples provided for learning how to write a custom module.
	See the developer guide: https://github.com/gigamon-dev/SubspaceServer/blob/master/doc/developer-guide.md
	-->
	<!--<module type="Example.ModuleLifeCycleExamples.ExampleModule" path="bin/modules/Example/Example.dll"/>-->
	<!--<module type="Example.ModuleLifeCycleExamples.LoaderAwareExample" path="bin/modules/Example/Example.dll"/>-->
	<!--<module type="Example.ModuleLifeCycleExamples.ArenaAttachableExample" path="bin/modules/Example/Example.dll"/>-->

	<!--
	Example modules (interfaces)
	============================
	The following modules are examples provided for learning how to write a custom module.
	See the developer guide: https://github.com/gigamon-dev/SubspaceServer/blob/master/doc/developer-guide.md
	-->
	<!--<module type="Example.InterfaceExamples.InjectionExample" path="bin/modules/Example/Example.dll"/>-->
	<!--<module type="Example.InterfaceExamples.ManualExample" path="bin/modules/Example/Example.dll"/>-->
	<!--<module type="Example.InterfaceExamples.ManualExample2" path="bin/modules/Example/Example.dll"/>-->
	<!--<module type="Example.InterfaceExamples.ManualExample2" path="bin/modules/Example/Example.dll"/>-->
	<!--<module type="Example.InterfaceExamples.RegistrationExample" path="bin/modules/Example/Example.dll"/>-->

	<!--
	Example modules (callbacks)
	===========================
	The following modules are examples provided for learning how to write a custom module.
	See the developer guide: https://github.com/gigamon-dev/SubspaceServer/blob/master/doc/developer-guide.md
	-->
	<!--<module type="Example.CallbackExamples.RegistrationExample" path="bin/modules/Example/Example.dll"/>-->
	<!--<module type="Example.CallbackExamples.ArenaRegistrationExample" path="bin/modules/Example/Example.dll"/>-->
	<!--<module type="Example.CallbackExamples.CustomExample" path="bin/modules/Example/Example.dll"/>-->

	<!--
	Example modules (advisors)
	==========================
	The following modules are examples provided for learning how to write a custom module.
	See the developer guide: https://github.com/gigamon-dev/SubspaceServer/blob/master/doc/developer-guide.md
	-->
	<!--<module type="Example.AdvisorExamples.RegistrationExample" path="bin/modules/Example/Example.dll"/>-->
	<!--<module type="Example.AdvisorExamples.UseAdvisorExample" path="bin/modules/Example/Example.dll"/>-->

	<!--
	Example modules (other)
	=======================
	The following modules are examples of how to use other, more advanced features.
	-->
	<!--<module type="Example.SelectBox.SelectBoxExample" path="bin/modules/Example/Example.dll"/>-->
</modules>
